"""4.	–í—ã–¥–∞—á–∞ –∏ –≤–æ–∑–≤—Ä–∞—Ç –∫–Ω–∏–≥ (–ó–∞—â–∏—â–µ–Ω–æ JWT):
o	–≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –≤—ã–¥–∞—á–∏ –∫–Ω–∏–≥–∏ —á–∏—Ç–∞—Ç–µ–ª—é:
ÔÇß	–ü—Ä–∏–Ω–∏–º–∞–µ—Ç book_id –∏ reader_id.
ÔÇß	–ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ 1: –ö–Ω–∏–≥—É –º–æ–∂–Ω–æ –≤—ã–¥–∞—Ç—å, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ > 0). –ü—Ä–∏ –≤—ã–¥–∞—á–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è –Ω–∞ 1.
ÔÇß	–§–∏–∫—Å–∏—Ä—É–µ—Ç—Å—è —Ñ–∞–∫—Ç –≤—ã–¥–∞—á–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ BorrowedBooks —Å –ø–æ–ª—è–º–∏ id, book_id, reader_id, borrow_date, return_date (–∏–∑–Ω–∞—á–∞–ª—å–Ω–æ NULL)).
ÔÇß	–ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ 2: –û–¥–∏–Ω —á–∏—Ç–∞—Ç–µ–ª—å –Ω–µ –º–æ–∂–µ—Ç –≤–∑—è—Ç—å –±–æ–ª–µ–µ 3-—Ö –∫–Ω–∏–≥ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ.
o	–≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫–Ω–∏–≥–∏ —á–∏—Ç–∞—Ç–µ–ª–µ–º:
ÔÇß	–ü—Ä–∏–Ω–∏–º–∞–µ—Ç book_id –∏ reader_id (–∏–ª–∏ borrow_id –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –æ—Ç–¥–µ–ª—å–Ω—É—é —Ç–∞–±–ª–∏—Ü—É).
ÔÇß	–ü—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –∫–Ω–∏–≥–∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 1.
ÔÇß	–í –∑–∞–ø–∏—Å–∏ –æ –≤—ã–¥–∞—á–µ –ø—Ä–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è return_date.
ÔÇß	–ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ 3: –ù–µ–ª—å–∑—è –≤–µ—Ä–Ω—É—Ç—å –∫–Ω–∏–≥—É, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞ —ç—Ç–æ–º—É —á–∏—Ç–∞—Ç–µ–ª—é –∏–ª–∏ —É–∂–µ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞.
"""
""" –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ä—å:
 –¢–æ–ª—å–∫–æ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ä–∏ –∏–º–µ—é—Ç –∞–∫–∫–∞—É–Ω—Ç—ã —Å –ø–∞—Ä–æ–ª—è–º–∏ –∏ –ø—Ä–æ—Ö–æ–¥—è—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –≤ —Å–∏—Å—Ç–µ–º–µ.
üìå –ß–∏—Ç–∞—Ç–µ–ª–∏ (ReaderUser) ‚Äî —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –æ–±—ä–µ–∫—Ç—ã –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã—Ö —Å–æ–∑–¥–∞—ë—Ç, —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç –∏ —É–¥–∞–ª—è–µ—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ä—å. –£ —á–∏—Ç–∞—Ç–µ–ª–µ–π –Ω–µ—Ç –ª–æ–≥–∏–Ω–∞, –ø–∞—Ä–æ–ª—è –∏ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∏—Å—Ç–µ–º–µ.
–ò–º–µ–µ—Ç –ª–æ–≥–∏–Ω (–∏–º—è/email) –∏ –ø–∞—Ä–æ–ª—å.

–ú–æ–∂–µ—Ç –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É (–ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω).

–ú–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –¥–µ–π—Å—Ç–≤–∏—è:

—Å–æ–∑–¥–∞—Ç—å, –∏–∑–º–µ–Ω–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å —á–∏—Ç–∞—Ç–µ–ª—è;

–≤—ã–¥–∞—Ç—å –∫–Ω–∏–≥—É —á–∏—Ç–∞—Ç–µ–ª—é;

–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –∫—Ç–æ —á—Ç–æ –≤–∑—è–ª;

–≤–µ—Ä–Ω—É—Ç—å –∫–Ω–∏–≥—É –∏ —Ç. –¥.

–±–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ä—å –≤—ã–±–∏—Ä–∞–µ—Ç, –∫–æ–º—É –≤—ã–¥–∞—Ç—å –∫–Ω–∏–≥—É.

üö´ –ß–∏—Ç–∞—Ç–µ–ª—å:
–ù–µ –∏–º–µ–µ—Ç —É—á—ë—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏, –ª–æ–≥–∏–Ω–∞ –∏–ª–∏ –ø–∞—Ä–æ–ª—è.

–ù–µ –º–æ–∂–µ—Ç –∑–∞–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É.

–ï–≥–æ –¥–∞–Ω–Ω—ã–µ –∑–∞–Ω–æ—Å—è—Ç—Å—è –≤—Ä—É—á–Ω—É—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ä–µ–º.

–ù–∞–ø—Ä–∏–º–µ—Ä: "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤", email="ivan@mail.ru", num_books=2 ‚Äî –ø—Ä–æ—Å—Ç–æ –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ."""


from fastapi import APIRouter, Depends, status, HTTPException
from typing import Annotated

from sqlalchemy import select, insert, update, delete
from sqlalchemy.orm import Session

from schemes import OutputBooksSchemas, ReturnBooksSchemas
from db.db_model import BorrowedBooks, Book, ReaderUser
from db.session_db import local_session_db

router_del_ret = APIRouter(prefix='/books', tags = ["–í—ã–¥–∞—á–∞ –∫–Ω–∏–≥"])

@router_del_ret.post("/book_distribution")
async def distribution(
    output: OutputBooksSchemas,
    db: Annotated[Session, Depends(local_session_db)]  
):
    book = db.scalar(select(Book).where(Book.id == output.book_id))
    user = db.scalar(select(ReaderUser).where(ReaderUser.id == output.reader_id))
    
    if not book:
        raise HTTPException(
            status_code=status.HTTP_404_NOT_FOUND, 
            detail='–¢–∞–∫–æ–π –∫–Ω–∏–≥–∏ –Ω–µ—Ç'
        )
        
    if not user:
        raise HTTPException(
            status_code=status.HTTP_404_NOT_FOUND,
            detail='–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
        )    
    
    if book.num_ins == 0:
        return {'message':'–ù–∞ —Å–∫–ª–∞–¥–µ –æ—Å—Ç–∞–ª–æ—Å—å 0 —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –∫–Ω–∏–≥'}
    else: 
        book.num_ins -= 1
    
    if user.num_book == 3:
        return {'message':"–£ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ—è —É–∂–µ –¢–†–ò –∫–Ω–∏–≥–∏"}
    else:
        user.num_book += 1
    
    output_book = BorrowedBooks(
        book_id = output.book_id,
        reader_id = output.reader_id,
        borrow_date = output.borrow_date
    )
    
    db.add(output_book)
    db.commit()
    return {'status_code':status.HTTP_200_OK, "detail":"–ö–Ω–∏–≥–∞ –≤—ã–¥–∞–Ω–∞"}

@router_del_ret.patch("/book_distribution")
async def refund(
    ret_book: ReturnBooksSchemas,
    db:Annotated[Session, Depends(local_session_db)]
):
    book = db.scalar(select(Book).where(Book.id==ret_book.book_id))
    user = db.scalar(select(ReaderUser).where(ReaderUser.id==ret_book.reader_id))
    
    if not book:
        raise HTTPException(
            status_code=status.HTTP_404_NOT_FOUND, 
            detail='–¢–∞–∫–æ–π –∫–Ω–∏–≥–∏ –Ω–µ—Ç'
        )
        
    if not user:
        raise HTTPException(
            status_code=status.HTTP_404_NOT_FOUND,
            detail='–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
        )  
         
    return_book = db.scalar(
        select(BorrowedBooks)
        .where(
            (BorrowedBooks.book_id==ret_book.book_id) &
            (BorrowedBooks.reader_id==ret_book.reader_id)
        )
    )
    
    if not return_book:
        raise HTTPException(
            status_code=status.HTTP_404_NOT_FOUND,
            detail='–ù–µ—Ç –∑–∞–ø–∏—Å–∏ –æ –≤—ã–¥–∞—á–∏ –∫–Ω–∏–≥–∏'
        )
    
    book.num_ins += 1 
    user.num_book -= 1
    return_book.return_date = ret_book.return_date
    
    db.commit()
    
    return {'status_code':status.HTTP_200_OK, "detail":"–ö–Ω–∏–≥–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞"}